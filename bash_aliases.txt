function gp {
  local branch=${1:-$(git rev-parse --abbrev-ref HEAD)}
  git pull origin $branch
}

function gpp {
  local message=${1:-"update"}
  git pull
  git add .
  git commit -m "$message"
  git push
}

function gc {
  local message=${1:-"update"}
  git commit -m "$message"
}

function t {
  local devices=${1:-0}
  local path=$2
  CUDA_VISIBLE_DEVICES=$devices python train.py $path
}

function tt {
  local devices=${1:-0}
  local path=$2
  CUDA_VISIBLE_DEVICES=$devices WANDB_MODE=disabled COMPILE=false python train.py $path
}

function gpu() {
    if [ -z "$1" ]; then
        echo "Usage: gpu [i]"
        return 1
    fi

    if ! nvidia-smi -i "$1" > /dev/null 2>&1; then
        echo "GPU $1 does not exist."
        return 1
    fi

    usage=$(nvidia-smi -i "$1" --query-compute-apps=pid --format=csv,noheader,nounits | wc -l)

    if [ "$usage" -eq 0 ]; then
        echo "free"
    else
        echo "occupied"
    fi
}

function gpus() {
    total_gpus=$(nvidia-smi --query-gpu=index --format=csv,noheader | wc -l)
    in_use_gpus=()

    for ((i=0; i<total_gpus; i++)); do
        usage=$(nvidia-smi -i "$i" --query-compute-apps=pid --format=csv,noheader,nounits | wc -l)
        if [ "$usage" -gt 0 ]; then
            in_use_gpus+=("$i")
        fi
    done

    if [ ${#in_use_gpus[@]} -gt 0 ]; then
        echo "${in_use_gpus[*]}" | sed 's/ /,/g'
    else
        echo "No GPUs in use."
    fi
}
